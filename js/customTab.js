// модуль по работе с ТАБАМИ
// при подключении создается объект в который записывается результат работы самовызывающейся функции (function(){})()
// доступ к телу функции осуществляется через свойства/методы созданного объекта,
// которые устанавливаются в операторе return
// применяется чтобы не возникало конфликтов в глобальной области видимости и для
// простоты манипуляций возвращаемыми методами во внешнем js
var CustomTab = (function () {
    // весь код ниже до оператора return запустится автоматически при подключении данного файла
    //

    var _txt;

    // функция, добавляющая / удаляющая класс active
    function toggleActive(elem){
        var sibl = elem.parent().siblings();// выбираем соседские элементы по отношению к переданному элементу
        sibl.children().removeClass('active');//удаляем классы active для дочерних элементов у выбранных соседских
        elem.addClass('active');// добавляем active для выбранного класа
    }

    // обработаем клики по табам над графиком
    $('#tabs-chart li a').click(function (){
        // this - элемент по которому совершен клик
        toggleActive($(this));// переключим состояние active у текущих табов

        $('#tooltip').css('display', 'none'); // тултип может быть открыт с прошлого раза - спрячем его

        // изменим массив с данными для построения графика в зависимости от текста нажатого таба
        _txt = this.innerText;// текст элемента по которому совершен клик

        // в зависимости от текста выбранного элемента сохраним данные для графика
        switch (_txt) {
            case 'TL':
                data.series = [
                    [2, 3, 2, 5, 3, 2]
                ];
                break;
            case 'EURO':
                data.series = [
                    [4, 2, 5, 3, 5, 6]
                ];
                break;
            default:
                data.series = [
                    [5, 2, 6, 2, 5, 3]
                ];
                break;
        }

        // перестроим график с теми данными которые сохранили в свойстве series объекта data
        CustomChart.create(data, _txt);
    });

    $('.bottom-left-block .container:first').show(); // по умолчанию отобразим содержимое первого контейнера

    //обработаем клики по табам под графиком
    $('#tabs li a').click(function(){
        // this - элемент по которому совершен клик
        toggleActive($(this));// переключим состояние active у текущих табов

        $('#tooltip').css('display', 'none'); // тултип может быть открыт с прошлого раза - спрячем его

        var t = $(this).attr('id');// сохраним id элемента по которому был сделан клик в переменную t


        $('.bottom-left-block .container').hide();// спрячем все контейнеры
        $('#'+ t + 'C').fadeIn('slow'); // выберем контейнер с id равным id текущего нажатого элемента + "C"

        // в зависимости от id нажатого таба создается график с нужной data.
        switch (t) {
            case 'tab1':
                data.series = [
                    [5, 5, 2, 5, 3, 2]
                ];
                break;
            case 'tab2':
                data.series = [
                    [4, 2, 5, 5, 5, 6]
                ];
                break;
            case 'tab3':
                data.series = [
                    [5, 2, 6, 2, 5, 5]
                ];
                break;
        }
        CustomChart.create(data, _txt);// текст для создаваемого графика берется из переменной _txt, установленной ранее
    });

    return {
        // доступ к телу модуля осуществляется через свойства объекта возвращаемого в операторе return

        // устанавливаем значение txt из внешнего js для использования внутри модуля
        setTxt: function (txt) {
            _txt = txt;
        }
    }
})();